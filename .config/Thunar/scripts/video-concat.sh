#!/bin/bash

# Скрипт для соединения нескольких видео в одно с помощью ffmpeg и zenity.
# Предназначен для использования в качестве кастомного действия в файловом менеджере Thunar.

# Исправление темы для GTK4 приложений для корректного отображения zenity
export GSK_RENDERER=gl
export GTK_THEME=Adwaita:dark
export ADW_DISABLE_PORTAL=1
export GTK_ENABLE_ANIMATIONS=0

# 1. ПРОВЕРКА АРГУМЕНТОВ
# ----------------------
# Проверяем, были ли переданы файлы в качестве аргументов.
if [ $# -eq 0 ]; then
    zenity --error --text="Не выбраны файлы для соединения." --width=300
    exit 1
fi

# 2. ПРОВЕРКА СУЩЕСТВОВАНИЯ ФАЙЛОВ
# ---------------------------------
# Перебираем все аргументы и убеждаемся, что каждый из них является существующим файлом.
for file in "$@"; do
    if [ ! -f "$file" ]; then
        zenity --error --text="Файл не найден: $file" --width=400
        exit 1
    fi
done

# 3. ПОДГОТОВКА ФАЙЛОВ
# -------------------
# Сортируем файлы в алфавитном порядке, чтобы обеспечить правильную последовательность соединения.
# IFS=$'\n' используется для корректной обработки файлов с пробелами в именах.
IFS=$'\n'
sorted_files=($(sort <<<"$*"))
unset IFS

# 4. ФОРМИРОВАНИЕ ВЫХОДНОГО ФАЙЛА
# -------------------------------
# Определяем имя и путь для итогового видеофайла.
FIRST_FILE="${sorted_files[0]}"
DIRECTORY=$(dirname "$FIRST_FILE")
BASENAME=$(basename "$FIRST_FILE" | sed 's/\.[^.]*$//') # Удаляем расширение
EXTENSION="${FIRST_FILE##*.}"

# Создаем имя для выходного файла, добавляя суффикс "_joined".
OUTPUT_FILE="$DIRECTORY/${BASENAME}_joined.$EXTENSION"

# Проверяем, не существует ли уже файл с таким именем.
# Если существует, добавляем числовой суффикс (например, _joined_1, _joined_2).
COUNTER=1
while [ -f "$OUTPUT_FILE" ]; do
    OUTPUT_FILE="$DIRECTORY/${BASENAME}_joined_${COUNTER}.$EXTENSION"
    ((COUNTER++))
done

# 5. СОЗДАНИЕ СПИСКА ДЛЯ FFMPEG
# ------------------------------
# Создаем временный файл, в который записываем пути ко всем видео для ffmpeg.
# Это необходимо для работы демуксера "concat".
TEMP_LIST=$(mktemp)
for file in "${sorted_files[@]}"; do
    # Добавляем "file" перед путем к файлу в соответствии с требованиями ffmpeg.
    echo "file '$file'" >> "$TEMP_LIST"
done

# 6. ПРОЦЕСС СОЕДИНЕНИЯ
# ---------------------
# Используем zenity для отображения прогресса и выполняем команду ffmpeg.
(
    echo "10"
    echo "# Анализ видеофайлов..."
    sleep 1
    
    echo "50"
    echo "# Соединение $# видеофайлов..."
    
    # Запускаем ffmpeg:
    # -f concat: используем демуксер concat для "бесшовного" соединения.
    # -safe 0: разрешаем использование абсолютных путей в списке файлов.
    # -i "$TEMP_LIST": указываем временный файл со списком видео.
    # -c copy: копируем видео- и аудиопотоки без перекодирования, что очень быстро и сохраняет качество.
    # 2>/dev/null: скрываем технический вывод ffmpeg, чтобы он не мешал zenity.
    ffmpeg -f concat -safe 0 -i "$TEMP_LIST" -c copy "$OUTPUT_FILE" 2>/dev/null
    
    echo "100"
    echo "# Соединение завершено!"
    sleep 1

) | zenity --progress \
    --title="Соединение видео" \
    --text="Подготовка к соединению $# видеофайлов..." \
    --percentage=0 \
    --auto-close \
    --width=450

# 7. ЗАВЕРШЕНИЕ И УВЕДОМЛЕНИЕ
# ---------------------------
# Удаляем временный файл списка.
rm -f "$TEMP_LIST"

# Проверяем, был ли успешно создан итоговый файл.
if [ $? -eq 0 ] && [ -f "$OUTPUT_FILE" ]; then
    # Просто показываем информационное сообщение об успехе.
    zenity --info --text="$# видеофайлов успешно соединено в:\n<b>$OUTPUT_FILE</b>" --width=500
else
    zenity --error --text="Произошла ошибка при соединении видео." --width=350
fi

exit 0